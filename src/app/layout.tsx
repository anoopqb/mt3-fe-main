import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import "@anoopqb/simple-ui/dist/index.css";
import { Header, Footer } from "./components";


// import "./styles/sitea.css";




const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Master Template 3",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Fetch data from two API endpoints in parallel
  const [response1, response2] = await Promise.all([
    fetch(`${process.env.NEXT_PUBLIC_API_URL}/headers?filters[slug]=header&pLevel=8`, {
      headers: {
        'Authorization': `Bearer ${process.env.NEXT_PUBLIC_API_TOKEN}`,
        'Content-Type': 'application/json',
      },
    }),
    fetch(`${process.env.NEXT_PUBLIC_API_URL}/footers?pLevel=8`, {
      headers: {
        'Authorization': `Bearer ${process.env.NEXT_PUBLIC_API_TOKEN}`,
        'Content-Type': 'application/json',
      },
    }),
  ]);

  const [headerData, footerData] = await Promise.all([
    response1.json(),
    response2.json(),
  ]);


  // Extract Header props from the API response
  const headerProps = {
    Logo: `${process.env.NEXT_PUBLIC_IMAGE_URL}${headerData.data[0].Logo.url}`,
    topNavItems: headerData.data[0].NavMenu,
  };

  const footerProps = {
    Logo: `${process.env.NEXT_PUBLIC_IMAGE_URL}${footerData.data[0].Logo.url}`,
    AddressLane1: footerData.data[0].AddressLane1,
    AddressLane2: footerData.data[0].AddressLane2,
    ZipCode: footerData.data[0].ZipCode,
    PhoneNumber: footerData.data[0].PhoneNumber,
    OfficeHours: footerData.data[0].OfficeHours?.[0]?.children?.[0]?.text || '',
  };

  // Extract propertyID from header API response
  const propertyID = headerData.data[0].PropertyID;

  // console.log('propertyID', propertyID);

  const siteId = process.env.NEXT_PUBLIC_SITE || 'sitea';
  const cssFile = `styles/${siteId}.css`;

  return (
    <html lang="en">
      <head>
        <link rel="stylesheet" href={`${cssFile}`} />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`} data-property-id={propertyID}>
        <Header {...headerProps} />
        {children}
        <Footer
          {...footerProps}
        />
      </body>
    </html>
  );
}
